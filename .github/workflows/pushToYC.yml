name: DeployWebApp_FlaskToDockerHubAndYC

on:
  push:
    branches:
      - master

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}  # Логин Docker Hub
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}       # Токен Docker Hub
  DOCKER_IMAGE_NAME: "webapp-flask"                       # Название образа
  YC_VM_USER: ${{ secrets.YC_SSH_USER }}                   # Пользователь ВМ Yandex Cloud
  YC_VM_IP: ${{ secrets.YC_VM_IP }}                       # IP виртуальной машины
  YC_SSH_PKEY: ${{ secrets.KEY }}             # Приватный SSH-ключ для подключения
  YC_PASSPHRASE: ${{ secrets.YC_PASSPHRASE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Логинимся в Docker Hub и пушим образ
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME .

      - name: Push Docker image
        run: docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME


      - name: Connect to YC VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.YC_VM_IP }}
          username: ${{ secrets.YC_SSH_USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.YC_PASSPHRASE }}
          script: |
            sudo docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

            if sudo docker ps -a | grep -q ${{ env.DOCKER_IMAGE_NAME }}; then
              sudo docker run -d -p 8080:5000 --name ${DOCKER_IMAGE_NAME}new ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}

              until curl -s -o /dev/null http://localhost:8080; do
                sleep 1
              done

              sudo docker stop ${{ env.DOCKER_IMAGE_NAME }}
              sudo docker rm ${{ env.DOCKER_IMAGE_NAME }}

              sudo docker stop ${DOCKER_IMAGE_NAME}new
              sudo docker rm ${DOCKER_IMAGE_NAME}new
              sudo docker run -d -p 80:5000 --name ${{ env.DOCKER_IMAGE_NAME }} ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
            else
              sudo docker run -d -p 80:5000 --name ${{ env.DOCKER_IMAGE_NAME }} ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
            fi